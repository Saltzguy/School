    Python  programming language    Wikipedia document documentElement className   document documentElement className replace       s client nojs  s         client js        window RLQ window RLQ      push function   mw config set   wgCanonicalNamespace      wgCanonicalSpecialPageName  false  wgNamespaceNumber     wgPageName   Python  programming language    wgTitle   Python  programming language    wgCurRevisionId             wgRevisionId             wgArticleId         wgIsArticle  true  wgIsRedirect  false  wgAction   view   wgUserName  null  wgUserGroups         wgCategories    All articles with unsourced statements   Articles with unsourced statements from October        Wikipedia articles needing clarification from May        Articles with unsourced statements from May        Articles containing potentially dated statements from March        All articles containing potentially dated statements   Articles containing potentially dated statements from August        Articles containing potentially dated statements from January        Articles with unsourced statements from March        Articles with Curlie links   Wikipedia articles with BNF identifiers   Wikipedia articles with GND identifiers   Wikipedia articles with LCCN identifiers   Wikipedia articles with SUDOC identifiers   Good articles   Use dmy dates from August        Programming languages   Class based programming languages   Computational notebook   Computer science in the Netherlands   Cross platform free software   Dutch inventions   Dynamically typed programming languages   Educational programming languages   High level programming languages   Information technology in the Netherlands   Object oriented programming languages   Programming languages created in        Python  programming language    Scripting languages   Text oriented programming languages   Cross platform software    wgBreakFrames  false  wgPageContentLanguage   en   wgPageContentModel   wikitext   wgSeparatorTransformTable           wgDigitTransformTable           wgDefaultDateFormat   dmy   wgMonthNames       January   February   March   April   May   June   July   August   September   October   November   December    wgMonthNamesShort       Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov   Dec    wgRelevantPageName   Python  programming language    wgRelevantArticleId         wgRequestId   WzI LQpAADkAABtH u AAABK   wgIsProbablyEditable  true  wgRelevantPageIsProbablyEditable  true  wgRestrictionEdit      wgRestrictionMove      wgFlaggedRevsParams    tags       wgStableRevisionId  null  wgCategoryTreePageCategoryOptions      mode       hideprefix        showcount   true   namespaces   false    wgWikiEditorEnabledModules      wgBetaFeaturesFeatures      wgMediaViewerOnClick  true  wgMediaViewerEnabledByDefault  true  wgPopupsShouldSendModuleToUser  true  wgPopupsConflictsWithNavPopupGadget  false  wgVisualEditor    pageLanguageCode   en   pageLanguageDir   ltr   pageVariantFallbacks   en   usePageImages  true  usePageDescriptions  true   wgPreferredVariant   en   wgMFExpandAllSectionsUserOption  true  wgMFEnableFontChanger  true  wgMFDisplayWikibaseDescriptions    search  true  nearby  true  watchlist  true  tagline  false   wgRelatedArticles  null  wgRelatedArticlesUseCirrusSearch  true  wgRelatedArticlesOnlyUseCirrusSearch  false  wgULSCurrentAutonym   English   wgNoticeProject   wikipedia   wgCentralNoticeCookiesToDelete      wgCentralNoticeCategoriesUsingLegacy    Fundraising   fundraising    wgWikibaseItemId   Q        wgScoreNoteLanguages    arabic             catalan   catal    deutsch   Deutsch   english   English   espanol   espa ol   italiano   italiano   nederlands   Nederlands   norsk   norsk   portugues   portugu s   suomi   suomi   svenska   svenska   vlaams   West Vlams    wgScoreDefaultNoteLanguage   nederlands   wgCentralAuthMobileDomain  false  wgCodeMirrorEnabled  true  wgVisualEditorToolbarScrollOffset     wgVisualEditorUnsupportedEditParams    undo   undoafter   veswitched    wgEditSubmitButtonLabelPublish  true   mw loader state   ext gadget charinsert styles   ready   ext globalCssJs user styles   ready   ext globalCssJs site styles   ready   site styles   ready   noscript   ready   user styles   ready   ext globalCssJs user   ready   ext globalCssJs site   ready   user   ready   user options   ready   user tokens   loading   ext cite styles   ready   mediawiki legacy shared   ready   mediawiki legacy commonPrint   ready   wikibase client init   ready   ext visualEditor desktopArticleTarget noscript   ready   ext uls interlanguage   ready   ext wikimediaBadges   ready   mediawiki skinning interface   ready   skins vector styles   ready    mw loader implement  user tokens  dqfd l  function   jQuery require module     nomin  mw user tokens set   editToken         patrolToken         watchToken         csrfToken              mw loader load   ext cite a  y   site   mediawiki page startup   mediawiki user   mediawiki hidpi   mediawiki page ready   mediawiki toc   mediawiki searchSuggest   ext gadget teahouse   ext gadget ReferenceTooltips   ext gadget watchlist notice   ext gadget DRN wizard   ext gadget charinsert   ext gadget refToolbar   ext gadget extra toolbar buttons   ext gadget switcher   ext centralauth centralautologin   mmv head   mmv bootstrap autostart   ext popups   ext visualEditor desktopArticleTarget init   ext visualEditor targetLoader   ext eventLogging subscriber   ext wikimediaEvents   ext navigationTiming   ext uls eventlogger   ext uls init   ext uls compactlinks   ext uls interface   ext  d   ext centralNotice geoIP   ext centralNotice startUp   skins vector js                                      Python  programming language   From Wikipedia  the free encyclopedia   Jump to navigation Jump to search  Python     Paradigm Object oriented  imperative  functional  procedural  reflective   Designed by Guido van Rossum   Developer Python Software Foundation   First appeared              Stable release             March         months ago                            May          days ago                    Preview release       b          May          days ago                    Typing discipline  Duck  dynamic  strong since version      Gradual      License Python Software Foundation License   Filename extensions  py   pyc   pyd   pyo  prior to           pyw   pyz  since           Website www python org   Major implementations   CPython  IronPython  Jython  MicroPython  Numba  PyPy  Stackless Python   Dialects   Cython  RPython   Influenced by   ABC     ALGOL        C      C        CLU      Dylan      Haskell      Icon      Java      Lisp      Modula        Perl   Influenced   Boo  Cobra  Coconut      CoffeeScript      D  F   Falcon  Genie      Go  Groovy  JavaScript          Julia      Nim  Ring      Ruby      Swift          Python Programming at Wikibooks     Python is an interpreted high level programming language for general purpose programming  Created by Guido van Rossum and first released in       Python has a design philosophy that emphasizes code readability  notably using significant whitespace  It provides constructs that enable clear programming on both small and large scales      Python features a dynamic type system and automatic memory management  It supports multiple programming paradigms  including object oriented  imperative  functional and procedural  and has a large and comprehensive standard library      Python interpreters are available for many operating systems  CPython  the reference implementation of Python  is open source software     and has a community based development model  as do nearly all of its variant implementations  CPython is managed by the non profit Python Software Foundation     Contents     History   Features and philosophy   Syntax and semantics      Indentation     Statements and control flow     Expressions     Methods     Typing     Mathematics     Libraries   Development environments   Implementations      Reference implementation     Other implementations     Unsupported implementations     Cross compilers to other languages     Performance     Development   Naming   Uses    Languages influenced by Python    See also    References    Further reading    External links    History edit      Guido van Rossum  the creator of Python   Main article  History of Python Python was conceived in the late     s      and its implementation began in December          by Guido van Rossum at Centrum Wiskunde   Informatica  CWI  in the Netherlands as a successor to the ABC language  itself inspired by SETL      capable of exception handling and interfacing with the Amoeba operating system     Van Rossum remains Python s principal author  His continuing central role in Python s development is reflected in the title given to him by the Python community  Benevolent Dictator For Life  BDFL   On the origins of Python  Van Rossum wrote in               In December       I was looking for a  hobby  programming project that would keep me occupied during the week around Christmas  My office     would be closed  but I had a home computer  and not much else on my hands  I decided to write an interpreter for the new scripting language I had been thinking about lately  a descendant of ABC that would appeal to Unix C hackers  I chose Python as a working title for the project  being in a slightly irreverent mood  and a big fan of Monty Python s Flying Circus     Guido van Rossum  Python     was released on    October      and had many major new features  including a cycle detecting garbage collector and support for Unicode  With this release  the development process became more transparent and community backed      Python      initially called Python      or py k  was released on   December      after a long testing period  It is a major revision of the language that is not completely backward compatible with previous versions      However  many of its major features have been backported to the Python     x     and     x version series  and releases of Python   include the  to  utility  which automates the translation of Python   code to Python        Python     s end of life date was initially set at       then postponed to      out of concern that a large body of existing code could not easily be forward ported to Python            In January       Google announced work on a Python     to Go transcompiler to improve performance under concurrent workloads      Features and philosophy edit  Python is a multi paradigm programming language  Object oriented programming and structured programming are fully supported  and many of its features support functional programming and aspect oriented programming  including by metaprogramming     and metaobjects  magic methods        Many other paradigms are supported via extensions  including design by contract         and logic programming      Python uses dynamic typing  and a combination of reference counting and a cycle detecting garbage collector for memory management  It also features dynamic name resolution  late binding   which binds method and variable names during program execution  Python s design offers some support for functional programming in the Lisp tradition  It has filter    map    and reduce   functions  list comprehensions  dictionaries  and sets  and generator expressions      The standard library has two modules  itertools and functools  that implement functional tools borrowed from Haskell and Standard ML      The language s core philosophy is summarized in the document The Zen of Python  PEP      which includes aphorisms such as       Beautiful is better than ugly Explicit is better than implicit Simple is better than complex Complex is better than complicated Readability counts  Rather than having all of its functionality built into its core  Python was designed to be highly extensible  This compact modularity has made it particularly popular as a means of adding programmable interfaces to existing applications  Van Rossum s vision of a small core language with a large standard library and easily extensible interpreter stemmed from his frustrations with ABC  which espoused the opposite approach      While offering choice in coding methodology  the Python philosophy rejects exuberant syntax  such as that of Perl  in favor of a simpler  less cluttered grammar  As Alex Martelli put it   To describe something as  clever  is not considered a compliment in the Python culture       Python s philosophy rejects the Perl  there is more than one way to do it  approach to language design in favor of  there should be one and preferably only one obvious way to do it       Python s developers strive to avoid premature optimization  and reject patches to non critical parts of CPython that would offer marginal increases in speed at the cost of clarity      When speed is important  a Python programmer can move time critical functions to extension modules written in languages such as C  or use PyPy  a just in time compiler  Cython is also available  which translates a Python script into C and makes direct C level API calls into the Python interpreter  An important goal of Python s developers is keeping it fun to use  This is reflected in the language s name a tribute to the British comedy group Monty Python     and in occasionally playful approaches to tutorials and reference materials  such as examples that refer to spam and eggs  from a famous Monty Python sketch  instead of the standard foo and bar          A common neologism in the Python community is pythonic  which can have a wide range of meanings related to program style  To say that code is pythonic is to say that it uses Python idioms well  that it is natural or shows fluency in the language  that it conforms with Python s minimalist philosophy and emphasis on readability  In contrast  code that is difficult to understand or reads like a rough transcription from another programming language is called unpythonic  Users and admirers of Python  especially those considered knowledgeable or experienced  are often referred to as Pythonists  Pythonistas  and Pythoneers          Syntax and semantics edit  Main article  Python syntax and semantics Python is meant to be an easily readable language  Its formatting is visually uncluttered  and it often uses English keywords where other languages use punctuation  Unlike many other languages  it does not use curly brackets to delimit blocks  and semicolons after statements are optional  It has fewer syntactic exceptions and special cases than C or Pascal      Indentation edit  Main article  Python syntax and semantics   Indentation Python uses whitespace indentation  rather than curly brackets or keywords  to delimit blocks  An increase in indentation comes after certain statements  a decrease in indentation signifies the end of the current block      Thus  the program s visual structure accurately represents the program s semantic structure     This feature is also sometimes termed the off side rule  Statements and control flow edit  Python s statements include  among others    The assignment statement  token      the equals sign   This operates differently than in traditional imperative programming languages  and this fundamental mechanism  including the nature of Python s version of variables  illuminates many other features of the language  Assignment in C  e g   x      translates to  typed variable name x receives a copy of numeric value     The  right hand  value is copied into an allocated storage location for which the  left hand  variable name is the symbolic address  The memory allocated to the variable is large enough  potentially quite large  for the declared type  In the simplest case of Python assignment  using the same example  x      translates to   generic  name x receives a reference to a separate  dynamically allocated object of numeric  int  type of value     This is termed binding the name to the object  Since the name s storage location doesn t contain the indicated value  it is improper to call it a variable  Names may be subsequently rebound at any time to objects of greatly varying types  including strings  procedures  complex objects with data and methods  etc  Successive assignments of a common value to multiple names  e g   x      y      z     result in allocating storage to  at most  three names and one numeric object  to which all three names are bound  Since a name is a generic reference holder it is unreasonable to associate a fixed data type with it  However at a given time a name will be bound to some object  which will have a type  thus there is dynamic typing  The if statement  which conditionally executes a block of code  along with else and elif  a contraction of else if   The for statement  which iterates over an iterable object  capturing each element to a local variable for use by the attached block  The while statement  which executes a block of code as long as its condition is true  The try statement  which allows exceptions raised in its attached code block to be caught and handled by except clauses  it also ensures that clean up code in a finally block will always be run regardless of how the block exits  The raise statement  used to raise a specified exception or re raise a caught exception  The class statement  which executes a block of code and attaches its local namespace to a class  for use in object oriented programming  The def statement  which defines a function or method  The with statement  from Python     released on September           which encloses a code block within a context manager  for example  acquiring a lock before the block of code is run and releasing the lock afterwards  or opening a file and then closing it   allowing Resource Acquisition Is Initialization  RAII  like behavior and replaces a common try finally idiom      The pass statement  which serves as a NOP  It is syntactically needed to create an empty code block  The assert statement  used during debugging to check for conditions that ought to apply  The yield statement  which returns a value from a generator function  From Python      yield is also an operator  This form is used to implement coroutines  The import statement  which is used to import modules whose functions or variables can be used in the current program  There are three ways of using import  import  module name   as  alias   or from  module name  import   or from  module name  import  definition     as  alias       definition     as  alias           The print statement was changed to the print   function in Python         Python does not support tail call optimization or first class continuations  and  according to Guido van Rossum  it never will          However  better support for coroutine like functionality is provided in      by extending Python s generators      Before      generators were lazy iterators  information was passed unidirectionally out of the generator  From Python      it is possible to pass information back into a generator function  and from Python      the information can be passed through multiple stack levels      Expressions edit  Some Python expressions are similar to languages such as C and Java  while some are not   Addition  subtraction  and multiplication are the same  but the behavior of division differs  There are two types of divisions in Python  They are floor division and integer division      Python also added the    operator for exponentiation  From Python      the new   infix operator was introduced  It is intended to be used by libraries such as NumPy for matrix multiplication          In Python     compares by value  versus Java  which compares numerics by value     and objects by reference       Value comparisons in Java on objects can be performed with the equals   method   Python s is operator may be used to compare object identities  comparison by reference   In Python  comparisons may be chained  for example a    b    c  Python uses the words and  or  not for its boolean operators rather than the symbolic           used in Java and C  Python has a type of expression termed a list comprehension  Python     extended list comprehensions into a more general expression termed a generator expression      Anonymous functions are implemented using lambda expressions  however  these are limited in that the body can only be one expression  Conditional expressions in Python are written as x if c else y      different in order of operands from the c   x   y operator common to many other languages   Python makes a distinction between lists and tuples  Lists are written as            are mutable  and cannot be used as the keys of dictionaries  dictionary keys must be immutable in Python   Tuples are written as            are immutable and thus can be used as the keys of dictionaries  provided all elements of the tuple are immutable  The   operator can be used to concatenate two tuples  which does not directly modify their contents  but rather produces a new tuple containing the elements of both provided tuples  Thus  given the variable t initially equal to            executing t   t          first evaluates t           which yields                  which is then assigned back to t  thereby effectively  modifying the contents  of t  while conforming to the immutable nature of tuple objects  Parentheses are optional for tuples in unambiguous contexts      Python features sequence unpacking where multiple expressions  each evaluating to anything that can be assigned to  a variable  a writable property  etc    are associated in the identical manner to that forming tuple literals and  as a whole  are put on the left hand side of the equal sign in an assignment statement  The statement expects an iterable object on the right hand side of the equal sign that produces the same number of values as the provided writable expressions when iterated through  and will iterate through it  assigning each of the produced values to the corresponding expression on the left  citation needed  Python has a  string format  operator    This functions analogous to printf format strings in C  e g   spam  s eggs  d      blah      evaluates to  spam blah eggs     In Python   and       this was supplemented by the format   method of the str class  e g   spam     eggs      format  blah       Python     added  f strings   blah    blah   eggs      f spam  blah  eggs  eggs        Python has various kinds of string literals   Strings delimited by single or double quote marks  Unlike in Unix shells  Perl and Perl influenced languages  single quote marks and double quote marks function identically  Both kinds of string use the backslash     as an escape character  String interpolation became available in Python     as  formatted string literals       Triple quoted strings  which begin and end with a series of three single or double quote marks  They may span multiple lines and function like here documents in shells  Perl and Ruby  Raw string varieties  denoted by prefixing the string literal with an r  Escape sequences are not interpreted  hence raw strings are useful where literal backslashes are common  such as regular expressions and Windows style paths  Compare    quoting  in C     Python has array index and array slicing expressions on lists  denoted as a key   a start stop  or a start stop step   Indexes are zero based  and negative indexes are relative to the end  Slices take elements from the start index up to  but not including  the stop index  The third slice parameter  called step or stride  allows elements to be skipped and reversed  Slice indexes may be omitted  for example a    returns a copy of the entire list  Each element of a slice is a shallow copy   In Python  a distinction between expressions and statements is rigidly enforced  in contrast to languages such as Common Lisp  Scheme  or Ruby  This leads to duplicating some functionality  For example   List comprehensions vs  for loops Conditional expressions vs  if blocks The eval   vs  exec   built in functions  in Python    exec is a statement   the former is for expressions  the latter is for statements   Statements cannot be a part of an expression  so list and other comprehensions or lambda expressions  all being expressions  cannot contain statements  A particular case of this is that an assignment statement such as a     cannot form part of the conditional expression of a conditional statement  This has the advantage of avoiding a classic C error of mistaking an assignment operator   for an equality operator    in conditions  if  c              is syntactically valid  but probably unintended  C code but if c          causes a syntax error in Python  Methods edit  Methods on objects are functions attached to the object s class  the syntax instance method argument  is  for normal methods and functions  syntactic sugar for Class method instance  argument   Python methods have an explicit self parameter to access instance data  in contrast to the implicit self  or this  in some other object oriented programming languages  e g   C    Java  Objective C  or Ruby       Typing edit  Python uses duck typing and has typed objects but untyped variable names  Type constraints are not checked at compile time  rather  operations on an object may fail  signifying that the given object is not of a suitable type  Despite being dynamically typed  Python is strongly typed  forbidding operations that are not well defined  for example  adding a number to a string  rather than silently attempting to make sense of them  Python allows programmers to define their own types using classes  which are most often used for object oriented programming  New instances of classes are constructed by calling the class  for example  SpamClass   or EggsClass     and the classes are instances of the metaclass type  itself an instance of itself   allowing metaprogramming and reflection  Before version      Python had two kinds of classes  old style and new style      The syntax of both styles is the same  the difference being whether the class object is inherited from  directly or indirectly  all new style classes inherit from object and are instances of type   In versions of Python   from Python     onwards  both kinds of classes can be used  Old style classes were eliminated in Python      The long term plan is to support gradual typing     and from Python      the syntax of the language allows specifying static types but they are not checked in the default implementation  CPython  An experimental optional static type checker named mypy supports compile time type checking       Summary of Python   s built in types  Type mutable Description Syntax example   bool immutable Boolean value True False   bytearray mutable Sequence of bytes bytearray b Some ASCII   bytearray b Some ASCII   bytearray                         bytes immutable Sequence of bytes b Some ASCII  b Some ASCII  bytes                         complex immutable Complex number with real and imaginary parts      j   dict mutable Associative array  or dictionary  of key and value pairs  can contain mixed types  keys and values   keys must be a hashable type   key            False    ellipsis  An ellipsis placeholder to be used as an index in NumPy arrays       float immutable Floating point number  system defined precision             frozenset immutable Unordered set  contains no duplicates  can contain mixed types  if hashable frozenset        string   True     int immutable Integer of unlimited magnitude          list mutable List  can contain mixed types        string   True    set mutable Unordered set  contains no duplicates  can contain mixed types  if hashable        string   True    str immutable A character string  sequence of Unicode codepoints  Wikipedia   Wikipedia     Spanning multiple lines      tuple immutable Can contain mixed types        string   True    Mathematics edit  Python has the usual C arithmetic operators                  It also has    for exponentiation  e g              and                and a new matrix multiply   operator is included in version          Additionally  it has a unary operator      which essentially inverts all the bits of its one argument  For integers  this means  x  x        Other operators include bitwise shift operators x    y  which shifts x to the left y places  the same as x     y    and x    y  which shifts x to the right y places  the same as x      y        The behavior of division has changed significantly over time      why    Python     and earlier use the C division behavior  The   operator is integer division if both operands are integers  and floating point division otherwise  Integer division rounds towards    e g           and             Python     changes integer division to round towards negative infinity  e g           and             The floor division    operator is introduced  So                                       and                  Adding from   future   import division causes a module to use Python     rules for division  see next   Python     changes   to be always floating point division  In Python terms  the pre       is classic division  the version       is real division  and    is floor division   Rounding towards negative infinity  though different from most languages  adds consistency  For instance  it means that the equation  a   b   b    a  b     is always true  It also means that the equation b  a  b    a b    a is valid for both positive and negative values of a  However  maintaining the validity of this equation means that while the result of a b is  as expected  in the half open interval     b   where b is a positive integer  it has to lie in the interval  b     when b is negative      Python provides a round function for rounding a float to the nearest integer  For tie breaking  versions before   use round away from zero  round      is      round       is           Python   uses round to even  round      is    round      is        Python allows boolean expressions with multiple equality relations in a manner that is consistent with general use in mathematics  For example  the expression a   b   c tests whether a is less than b and b is less than c      C derived languages interpret this expression differently  in C  the expression would first evaluate a   b  resulting in   or    and that result would then be compared with c      Python has extensive built in support for arbitrary precision arithmetic  Integers are transparently switched from the machine supported maximum fixed precision  usually    or    bits   belonging to the python type int  to arbitrary precision  belonging to the Python type long  where needed  The latter have an  L  suffix in their textual representation       In Python    the distinction between the int and long types was eliminated  this behavior is now entirely contained by the int class   The Decimal type class in module decimal  since version      provides decimal floating point numbers to arbitrary precision and several rounding modes      The Fraction type in module fractions  since version      provides arbitrary precision for rational numbers      Due to Python s extensive mathematics library  and the third party library NumPy that further extends the native capabilities  it is frequently used as a scientific scripting language to aid in problems such as numerical data processing and manipulation  citation needed  Libraries edit  Python s large standard library  commonly cited as one of its greatest strengths      provides tools suited to many tasks  For Internet facing applications  many standard formats and protocols such as MIME and HTTP are supported  It includes modules for creating graphical user interfaces  connecting to relational databases  generating pseudorandom numbers  arithmetic with arbitrary precision decimals      manipulating regular expressions  and unit testing  Some parts of the standard library are covered by specifications  for example  the Web Server Gateway Interface  WSGI  implementation wsgiref follows PEP           but most modules are not  They are specified by their code  internal documentation  and test suites  if supplied   However  because most of the standard library is cross platform Python code  only a few modules need altering or rewriting for variant implementations  As of March       update  the Python Package Index  PyPI   the official repository for third party Python software  contains over             packages with a wide range of functionality  including   Graphical user interfaces Web frameworks Multimedia Databases Networking Test frameworks Automation Web scraping     Documentation System administration Scientific computing Text processing Image processing  Development environments edit  See also  Comparison of integrated development environments   Python Most Python implementations  including CPython  include a read eval print loop  REPL   permitting them to function as a command line interpreter for which the user enters statements sequentially and receives results immediately  Other shells  including IDLE and IPython  add further abilities such as auto completion  session state retention and syntax highlighting  As well as standard desktop integrated development environments  see Wikipedia s  Python IDE  article   there are Web browser based IDEs  SageMath  intended for developing science and math related Python programs   PythonAnywhere  a browser based IDE and hosting environment  and Canopy IDE  a commercial Python IDE emphasizing scientific computing      Implementations edit  See also  List of Python software   Python implementations Reference implementation edit  CPython is the reference implementation of Python  It is written in C  meeting the C   standard with several select C   features      It compiles Python programs into an intermediate bytecode     which is then executed by its virtual machine      CPython is distributed with a large standard library written in a mixture of C and native Python  It is available for many platforms  including Windows and most modern Unix like systems  Platform portability was one of its earliest priorities      Other implementations edit  PyPy is a fast  compliant      interpreter of Python     and      Its just in time compiler brings a significant speed improvement over CPython       Stackless Python is a significant fork of CPython that implements microthreads  it does not use the C memory stack  thus allowing massively concurrent programs  PyPy also has a stackless version       MicroPython and CircuitPython are Python   variants optimised for microcontrollers  Unsupported implementations edit  Other just in time Python compilers have been developed  but are now unsupported   Google began a project named Unladen Swallow in      with the aim of speeding up the Python interpreter fivefold by using the LLVM  and of improving its multithreading ability to scale to thousands of cores       Psyco is a just in time specialising compiler that integrates with CPython and transforms bytecode to machine code at runtime  The emitted code is specialised for certain data types and is faster than standard Python code   In       Nokia released a Python interpreter for the Series    mobile phones named PyS    It includes many of the modules from the CPython implementations and some additional modules to integrate with the Symbian operating system  The project has been kept up to date to run on all variants of the S   platform  and several third party modules are available  The Nokia N    also supports Python with GTK widget libraries  enabling programs to be written and run on the target device       Cross compilers to other languages edit  There are several compilers to high level object languages  with either unrestricted Python  a restricted subset of Python  or a language similar to Python as the source language   Jython compiles into Java byte code  which can then be executed by every Java virtual machine implementation  This also enables the use of Java class library functions from the Python program  IronPython follows a similar approach in order to run Python programs on the  NET Common Language Runtime  The RPython language can be compiled to C  Java bytecode  or Common Intermediate Language  and is used to build the PyPy interpreter of Python  Pyjs compiles Python to JavaScript  Cython compiles Python to C and C    Pythran compiles Python to C    Somewhat dated Pyrex  latest release in       and Shed Skin  latest release in       compile to C and C   respectively  Google s Grumpy compiles Python to Go  Nuitka compiles Python into C          Performance edit  A performance comparison of various Python implementations on a non numerical  combinatorial  workload was presented at EuroSciPy           Development edit  Python s development is conducted largely through the Python Enhancement Proposal  PEP  process  the primary mechanism for proposing major new features  collecting community input on issues and documenting Python design decisions       Outstanding PEPs are reviewed and commented on by the Python community and Guido Van Rossum  Python s Benevolent Dictator For Life       Enhancement of the language corresponds with development of the CPython reference implementation  The mailing list python dev is the primary forum for the language s development  Specific issues are discussed in the Roundup bug tracker maintained at python org       Development originally took place on a self hosted source code repository running Mercurial  until Python moved to GitHub in January            CPython s public releases come in three types  distinguished by which part of the version number is incremented   Backward incompatible versions  where code is expected to break and need to be manually ported  The first part of the version number is incremented  These releases happen infrequently for example  version     was released   years after      Major or  feature  releases  about every    months  are largely compatible but introduce new features  The second part of the version number is incremented  Each major version is supported by bugfixes for several years after its release       Bugfix releases  which introduce no new features  occur about every   months and are made when a sufficient number of bugs have been fixed upstream since the last release  Security vulnerabilities are also patched in these releases  The third and final part of the version number is incremented        Many alpha  beta  and release candidates are also released as previews and for testing before final releases  Although there is a rough schedule for each release  they are often delayed if the code is not ready  Python s development team monitors the state of the code by running the large unit test suite during development  and using the BuildBot continuous integration system       The community of Python developers has also contributed over             software modules  as of    August      update   to the Python Package Index  PyPI   the official repository of third party Python libraries  The major academic conference on Python is PyCon  There are also special Python mentoring programmes  such as Pyladies  Naming edit  Python s name is derived from the British comedy group Monty Python  whom Python creator Guido van Rossum enjoyed while developing the language  Monty Python references appear frequently in Python code and culture       for example  the metasyntactic variables often used in Python literature are spam and eggs instead of the traditional foo and bar            The official Python documentation also contains various references to Monty Python routines            The prefix Py  is used to show that something is related to Python  Examples of the use of this prefix in names of Python applications or libraries include Pygame  a binding of SDL to Python  commonly used to create games   PyQt and PyGTK  which bind Qt and GTK to Python respectively  and PyPy  a Python implementation originally written in Python  Uses edit  Main article  List of Python software Since       Python has consistently ranked in the top ten most popular programming languages in the TIOBE Programming Community Index where  as of January      update   it is the fourth most popular language  behind Java  C  and C          It was selected Programming Language of the Year in      and            An empirical study found that scripting languages  such as Python  are more productive than conventional languages  such as C and Java  for programming problems involving string manipulation and search in a dictionary  and determined that memory consumption was often  better than Java and not much worse than C or C          Large organizations that use Python include Wikipedia  Google       Yahoo        CERN       NASA       Facebook       Amazon  Instagram  Spotify citation needed  and some smaller entities like ILM      and ITA       The social news networking site Reddit is written entirely in Python  Python can serve as a scripting language for web applications  e g   via mod wsgi for the Apache web server       With Web Server Gateway Interface  a standard API has evolved to facilitate these applications  Web frameworks like Django  Pylons  Pyramid  TurboGears  web py  Tornado  Flask  Bottle and Zope support developers in the design and maintenance of complex applications  Pyjs and IronPython can be used to develop the client side of Ajax based applications  SQLAlchemy can be used as data mapper to a relational database  Twisted is a framework to program communications between computers  and is used  for example  by Dropbox  Libraries such as NumPy  SciPy and Matplotlib allow the effective use of Python in scientific computing            with specialized libraries such as Biopython and Astropy providing domain specific functionality  SageMath is a mathematical software with a  notebook  programmable in Python  its library covers many aspects of mathematics  including algebra  combinatorics  numerical mathematics  number theory  and calculus  Python has been successfully embedded in many software products as a scripting language  including in finite element method software such as Abaqus   D parametric modeler like FreeCAD   D animation packages such as  ds Max  Blender  Cinema  D  Lightwave  Houdini  Maya  modo  MotionBuilder  Softimage  the visual effects compositor Nuke   D imaging programs like GIMP       Inkscape  Scribus and Paint Shop Pro       and musical notation programs like scorewriter and capella  GNU Debugger uses Python as a pretty printer to show complex structures such as C   containers  Esri promotes Python as the best choice for writing scripts in ArcGIS       It has also been used in several video games            and has been adopted as first of the three available programming languages in Google App Engine  the other two being Java and Go       Python is also used in algorithmic trading and quantitative finance       Python can also be implemented in APIs of online brokerages that run on other languages by using wrappers       Python has been used in artificial intelligence projects                      As a scripting language with modular architecture  simple syntax and rich text processing tools  Python is often used for natural language processing       Many operating systems include Python as a standard component  It ships with most Linux distributions  AmigaOS    FreeBSD  NetBSD  OpenBSD and macOS  and can be used from the command line  terminal   Many Linux distributions use installers written in Python  Ubuntu uses the Ubiquity installer  while Red Hat Linux and Fedora use the Anaconda installer  Gentoo Linux uses Python in its package management system  Portage  Python is used extensively in the information security industry  including in exploit development            Most of the Sugar software for the One Laptop per Child XO  now developed at Sugar Labs  is written in Python       The Raspberry Pi single board computer project has adopted Python as its main user programming language  LibreOffice includes Python  and intends to replace Java with Python  Its Python Scripting Provider is a core feature      since Version     from   February       Languages influenced by Python edit  Python s design and philosophy have influenced many other programming languages   Boo uses indentation  a similar syntax  and a similar object model       Cobra uses indentation and a similar syntax  and its  Acknowledgements  document lists Python first among languages that influenced it       However  Cobra directly supports design by contract  unit tests  and optional static typing       CoffeeScript  a programming language that cross compiles to JavaScript  has Python inspired syntax  ECMAScript borrowed iterators and generators from Python       Go is designed for the  speed of working in a dynamic language like Python       and shares the same syntax for slicing arrays  Groovy was motivated by the desire to bring the Python design philosophy to Java       Julia was designed  with true macros     and to be  as usable for general programming as Python  and  should be as fast as C       Calling to or from Julia is possible  to with PyCall jl and a Python package pyjulia allows calling  in the other direction  from Python  Kotlin  programming language  is a functional programming language with an interactive shell similar to python  However  Kotlin is strongly typed with access to standard Java libraries       Ruby s creator  Yukihiro Matsumoto  has said   I wanted a scripting language that was more powerful than Perl  and more object oriented than Python  That s why I decided to design my own language        Swift  a programming language developed by Apple  has some Python inspired syntax       GDScript  dynamically typed programming language used to create video games  It is extremely similar to Python with a few minor differences   Python s development practices have also been emulated by other languages  For example  the practice of requiring a document describing the rationale for  and issues surrounding  a change to the language  in Python  a PEP  is also used in Tcl      and Erlang       Python received TIOBE s Programming Language of the Year awards in      and       The award is given to the language with the greatest growth in popularity over the year  as measured by the TIOBE index       See also edit    Free software portal Python programming portal    History of Python Comparison of integrated development environments for Python Comparison of programming languages List of programming languages pip  package manager  Off side rule  References edit      a b Guttag  John V                Introduction to Computation and Programming Using Python  With Application to Understanding Data  MIT Press  ISBN                       Deily  Ned     March         Python       is now available   Python Insider  The Python Core Developers  Retrieved    March          Peterson  Benjamin    May         Python        released   Python Insider  The Python Core Developers  Retrieved   May           Python Release Python      b    Python org  Retrieved                 PEP        The Theory of Type Hints   Python org     File extension  pyo was removed in Python      See PEP        Holth  Moore     March         PEP         Improving Python ZIP Application Support   Retrieved    November          a b  Why was Python created in the first place    General Python FAQ  Python Software Foundation  Retrieved    March          Kuchling  Andrew M      December         Interview with Guido van Rossum  July         amk ca  Archived from the original on   May       Retrieved    March          van Rossum  Guido          An Introduction to Python for UNIX C Programmers   Proceedings of the NLUUG najaarsconferentie  Dutch UNIX users group   even though the design of C is far from ideal  its influence on Python is considerable     a b  Classes   The Python Tutorial  Python Software Foundation  Retrieved    February       It is a mixture of the class mechanisms found in C   and Modula      Lundh  Fredrik   Call By Object   effbot org  Retrieved    November       replace  CLU  with  Python    record  with  instance   and  procedure  with  function or method   and you get a pretty accurate description of Python s object model     Simionato  Michele   The Python     Method Resolution Order   Python Software Foundation  The C  method itself has nothing to do with Python  since it was invented by people working on Dylan and it is described in a paper intended for lispers    Kuchling  A  M   Functional Programming HOWTO   Python v      documentation  Python Software Foundation  Retrieved   February          Schemenauer  Neil  Peters  Tim  Hetland  Magnus Lie     May         PEP       Simple Generators   Python Enhancement Proposals  Python Software Foundation  Retrieved   February          Smith  Kevin D   Jewett  Jim J   Montanaro  Skip  Baxter  Anthony    September         PEP       Decorators for Functions and Methods   Python Enhancement Proposals  Python Software Foundation  Retrieved    February           More Control Flow Tools   Python   documentation  Python Software Foundation  Retrieved    July          Hubinger  Evan   Coconut Programming Language   coconut lang org  Retrieved    August           CoffeeScript borrows chained comparisons from Python       Genie Language   A brief guide   Retrieved    December           Perl and Python influences in JavaScript   www  ality com     February       Retrieved    May          Rauschmayer  Axel   Chapter    The Nature of JavaScript  Influences   O Reilly  Speaking JavaScript  Retrieved    May          a b  Why We Created Julia   Julia website  February       Retrieved   June          Ring Team    December         Ring and other languages   ring lang net  ring lang     Bini  Ola         Practical JRuby on Rails Web     Projects  bringing Ruby on Rails to the Java platform  Berkeley  APress  p     ISBN                       Lattner  Chris    June         Chris Lattner s Homepage   Chris Lattner  Retrieved   June       The Swift language is the product of tireless effort from a team of language experts  documentation gurus  compiler optimization ninjas  and an incredibly important internal dogfooding group who provided feedback to help refine and battle test ideas  Of course  it also greatly benefited from the experiences hard won by many other languages in the field  drawing ideas from Objective C  Rust  Haskell  Ruby  Python  C   CLU  and far too many others to list     Kuhlman  Dave   A Python Book  Beginning Python  Advanced Python  and Python Exercises   Archived from the original on    June           About Python   Python Software Foundation  Retrieved    April         second section  Fans of Python use the phrase  batteries included  to describe the standard library  which covers everything from asynchronous processing to zip files      History and License   Retrieved   December         All Python releases are Open Source    a b Venners  Bill     January         The Making of Python   Artima Developer  Artima  Retrieved    March          van Rossum  Guido     January         A Brief Timeline of Python   The History of Python  Google  Retrieved    January          van Rossum  Guido     August         SETL  was  Lukewarm about range literals    Python Dev  Mailing list   Retrieved    March          van Rossum  Guido          Foreword for  Programming Python    st ed     Retrieved    July          Kuchling  A  M   Zadka  Moshe     October         What s New in Python       Python Software Foundation  Retrieved    February           Python     Release   Python Software Foundation  Retrieved   July          van Rossum  Guido    April         PEP        Python        Python Enhancement Proposals  Python Software Foundation  Retrieved    June           Automated Python   to   code translation   Python Documentation   Retrieved    February           PEP        Python     Release Schedule   python org  Retrieved   January           PEP        Network Security Enhancements for Python     x   python org  Retrieved   January           Google Open Source Blog  Grumpy  Go running Python      January       Retrieved   March          The Cain Gang Ltd   Python Metaclasses  Who  Why  When    PDF   Archived from the original  PDF  on    December       Retrieved    June                Special method names   The Python Language Reference  Python Software Foundation  Retrieved    June           PyDBC  method preconditions  method postconditions and class invariants for Python   Retrieved    September           Contracts for Python   Retrieved    September           PyDatalog   Retrieved    July          a b Hettinger  Raymond     January         PEP       Generator Expressions   Python Enhancement Proposals  Python Software Foundation  Retrieved    February               itertools   Functions creating iterators for efficient looping   Docs python org  Retrieved    November          a b Peters  Tim     August         PEP      The Zen of Python   Python Enhancement Proposals  Python Software Foundation  Retrieved    November          Martelli  Alex  Ravenscroft  Anna  Ascher  David         Python Cookbook   nd Edition  O Reilly Media  p       ISBN                        Python Culture       General Python FAQ   Python v      documentation  Docs python org  Retrieved   December              Ways Python Is a Powerful Force on the Web       pprint   Data pretty printer   Python Documentation      Goodger  David   Code Like a Pythonista  Idiomatic Python       How to think like a Pythonista       Is Python a good language for beginning programmers    General Python FAQ  Python Software Foundation  Retrieved    March           Myths about indentation in Python   Secnetix de  Retrieved    April           Python     Release   Python org      Highlights  Python       Python org     Sweigart  Al          Appendix A  Differences Between Python   and     Invent Your Own Computer Games with Python    ed    ISBN                    Retrieved    February          van Rossum  Guido     April         Tail Recursion Elimination   Neopythonic blogspot be  Retrieved   December          van Rossum  Guido    February         Language Design Is Not Just Solving Puzzles   Artima forums  Artima  Retrieved    March          van Rossum  Guido  Eby  Phillip J      May         PEP       Coroutines via Enhanced Generators   Python Enhancement Proposals  Python Software Foundation  Retrieved    February           PEP       Python org  Retrieved   December           division   python org      PEP         A dedicated infix operator for matrix multiplication   python org  Retrieved   January           Python       Release and Changelog   python org  Retrieved   January           Chapter     Expressions            Numerical Equality Operators    and      Oracle Corporation  Retrieved    August           Chapter     Expressions            Reference Equality Operators    and      Oracle Corporation  Retrieved    August          van Rossum  Guido  Hettinger  Raymond    February         PEP       Conditional Expressions   Python Enhancement Proposals  Python Software Foundation  Retrieved    July              Built in Types   Python      rc  documentation   python org  Retrieved   October          a b  PEP        Literal String Interpolation   python org  Retrieved   March           Why must  self  be used explicitly in method definitions and calls    Design and History FAQ  Python Software Foundation  Retrieved    February           The Python Language Reference  section      New style and classic classes  for release         Retrieved    January           Type hinting for Python   LWN net     December       Retrieved   May           mypy   Optional Static Typing for Python   Retrieved    January          Zadka  Moshe  van Rossum  Guido     March         PEP       Unifying Long Integers and Integers   Python Enhancement Proposals  Python Software Foundation  Retrieved    September           PEP        A dedicated infix operator for matrix multiplication   python org      The tilde operator in Python   Stackoverflow   stackoverflow com      BitwiseOperators   Python Wiki   wiki python org     Zadka  Moshe  van Rossum  Guido     March         PEP       Changing the Division Operator   Python Enhancement Proposals  Python Software Foundation  Retrieved    October           Why Python s Integer Division Floors   Retrieved    August           round   The Python standard library  release          Built in functions  retrieved    August          round   The Python standard library  release          Built in functions  retrieved    August         Beazley  David M          Python Essential Reference   th ed    p         Kernighan  Brian W   Ritchie  Dennis M          The C Programming Language   nd ed    p           Built in Type   docs python org     Batista  Facundo   PEP         Decimal Data Type   Python org  Retrieved    September           What s New in Python       Python v      documentation   docs python org  Retrieved    September          Piotrowski  Przemyslaw  July         Build a Rapid Web Development Environment for Python Server Pages and Oracle   Oracle Technology Network  Oracle  Retrieved    March          Batista  Facundo     October         PEP       Decimal Data Type   Python Enhancement Proposals  Python Software Foundation  Retrieved    November          Eby  Phillip J     December         PEP       Python Web Server Gateway Interface v      Python Enhancement Proposals  Python Software Foundation  Retrieved    February          Debill  Erik   Module Counts   ModuleCounts  Retrieved    September               Python Web Scraping Examples  Beautiful Soup   Selenium    Like Geeks   likegeeks com    December       Retrieved    March          Enthought  Canopy   Canopy   www enthought com  Retrieved    August          van Rossum  Guido    June         PEP     Style Guide for C Code   Python Enhancement Proposals  Python Software Foundation  Retrieved    November           CPython byte code   Docs python org  Retrieved    February           Python     internals   PDF   Retrieved    April           An Interview with Guido van Rossum   Oreilly com  Retrieved    November           PyPy compatibility   Pypy org  Retrieved   December           speed comparison between CPython and Pypy   Speed pypy org  Retrieved   December           Application level Stackless features   PyPy       documentation   Doc pypy org  Retrieved    July           Plans for optimizing Python   Google Project Hosting  Google     December       Retrieved    September           Python on the Nokia N      Stochastic Geometry      Nuitka Home   Nuitka Home   nuitka net  Retrieved    August          Murri  Riccardo         Performance of Python runtimes on a non numeric scientific code  European Conference on Python in Science  EuroSciPy   arXiv             Bibcode     arXiv         M     a b Warsaw  Barry  Hylton  Jeremy  Goodger  David     June         PEP     PEP Purpose and Guidelines   Python Enhancement Proposals  Python Software Foundation  Retrieved    April          Cannon  Brett   Guido  Some Guys  and a Mailing List  How Python is Developed   python org  Python Software Foundation  Archived from the original on   June       Retrieved    June           Python Developer s Guide      Norwitz  Neal    April          Python Dev  Release Schedules  was Stability   change    Retrieved    June          Aahz  Baxter  Anthony     March         PEP     Bug Fix Releases   Python Enhancement Proposals  Python Software Foundation  Retrieved    June           Python Buildbot   Python Developer s Guide  Python Software Foundation  Retrieved    September          DeBill  Erik   Module Counts   www modulecounts com  Retrieved    August          a b  Whetting Your Appetite   The Python Tutorial  Python Software Foundation  Retrieved    February           In Python  should I use else after a return in an if block    Stack Overflow  Stack Exchange     February       Retrieved   May          Lutz  Mark         Learning Python  Powerful Object Oriented Programming  O Reilly Media  Inc  p      ISBN                   Fehily  Chris         Python  Peachpit Press  p  xv  ISBN                    TIOBE Index   TIOBE   The Software Quality Company  Retrieved   March          TIOBE Software Index          TIOBE Programming Community Index Python   Retrieved    September          Prechelt  Lutz     March         An empirical comparison of C  C    Java  Perl  Python  Rexx  and Tcl   PDF   Retrieved    August           Quotes about Python   Python Software Foundation  Retrieved   January           Organizations Using Python   Python Software Foundation  Retrieved    January           Python   the holy grail of programming   CERN Bulletin  CERN Publications               July       Retrieved    February          Shafer  Daniel G      January         Python Streamlines Space Shuttle Mission Design   Python Software Foundation  Retrieved    November           Tornado  Facebook s Real Time Web Framework for Python   Facebook for Developers   Facebook for Developers  Retrieved                Fortenberry  Tim     January         Industrial Light   Magic Runs on Python   Python Software Foundation  Retrieved    February          Taft  Darryl K     March         Python Slithers into Systems   eWeek com  Ziff Davis Holdings  Retrieved    September           Usage statistics and market share of Python for websites         Retrieved    December          Oliphant  Travis          Python for Scientific Computing   Computing in Science and Engineering     Millman  K  Jarrod  Aivazis  Michael          Python for Scientists and Engineers   Computing in Science and Engineering                    Installers for GIMP for Windows   Frequently Asked Questions      July       Archived from the original on    July       Retrieved    July           jasc psp components   Archived from the original on    March           About getting started with writing geoprocessing scripts   ArcGIS Desktop Help      Environmental Systems Research Institute     November       Retrieved    February          CCP porkbelly     August         Stackless Python       EVE Community Dev Blogs  CCP Games  As you may know  EVE has at its core the programming language known as Stackless Python     Caudill  Barry     September         Modding Sid Meier s Civilization IV   Sid Meier s Civilization IV Developer Blog  Firaxis Games  Archived from the original on    August       we created three levels of tools     The next level offers Python and XML support  letting modders with more experience manipulate the game world and everything in it      Python Language Guide  v       Google Documents List Data API v     Google  Archived from the original on    August           Python   Best Programming Language for Algorithmic Trading Systems     March       Retrieved   October           Trading with Interactive Brokers using Python  An IBPy Tutorial      September       Retrieved   October           Python for Artificial Intelligence   Wiki python org     July       Archived from the original on   November       Retrieved   December          Paine  Jocelyn  ed   August         AI in Python   AI Expert Newsletter  Amzi   Retrieved    February           PyAIML         Python Package Index   Pypi python org  Retrieved    July          Russell  Stuart J    Norvig  Peter         Artificial Intelligence  A Modern Approach   rd ed    Upper Saddle River  NJ  Prentice Hall  p        ISBN                    Retrieved    February           Natural Language Toolkit       Immunity  Knowing You re Secure   Archived from the original on    February           Corelabs site       What is Sugar    Sugar Labs  Retrieved    February               New Features and Fixes   LibreOffice org  The Document Foundation        Retrieved    February           Gotchas for Python Users   boo codehaus org  Codehaus Foundation  Archived from the original on    December       Retrieved    November          Esterbrook  Charles   Acknowledgements   cobra language com  Cobra Language  Retrieved   April          Esterbrook  Charles   Comparison to Python   cobra language com  Cobra Language  Retrieved   April           Proposals  iterators and generators  ES  Wiki    wiki ecmascript org  Archived from the original on    October       Retrieved    November          Kincaid  Jason     November         Google s Go  A New Programming Language That s Python Meets C     TechCrunch  Retrieved    January          Strachan  James     August         Groovy   the birth of a new dynamic language for the Java platform       Working with the Command Line Compiler   Kotlin Programming Language   Kotlin  Retrieved    March           An Interview with the Creator of Ruby   Linuxdevcenter com  Retrieved   December          Lattner  Chris    June         Chris Lattner s Homepage   Chris Lattner  Retrieved   June       I started work on the Swift Programming Language in July of       I implemented much of the basic language structure  with only a few people knowing of its existence  A few other  amazing  people started contributing in earnest late in       and it became a major focus for the Apple Developer Tools group in July            drawing ideas from Objective C  Rust  Haskell  Ruby  Python  C   CLU  and far too many others to list     Kupries  Andreas  Fellows  Donal K      September         TIP     TIP Format   tcl tk  Tcl Developer Xchange  Retrieved    November          Gustafsson  Per  Niskanen  Raimo     January         EEP    EEP Purpose and Guidelines   erlang org  Retrieved    April           TIOBE Programming Community Index for March        TIOBE Software  March       Retrieved    March          Further reading edit   Downey  Allen B   May        Think Python  How to Think Like a Computer Scientist  Version       ed    ISBN                     Hamilton  Naomi    August         The A Z of Programming Languages  Python   Computerworld  Archived from the original on    December       Retrieved    March        Lutz  Mark         Learning Python   th ed    O Reilly Media  ISBN                     Pilgrim  Mark         Dive Into Python  Apress  ISBN                     Pilgrim  Mark         Dive Into Python    Apress  ISBN                    Archived from the original on              Summerfield  Mark         Programming in Python     nd ed    Addison Wesley Professional  ISBN                      External links edit   Find more aboutPython  programming language at Wikipedia s sister projects  Media from Wikimedia Commons Quotations from Wikiquote Textbooks from Wikibooks Learning resources from Wikiversity    Official website Python at Curlie  based on DMOZ         v t e   Programming languages       Comparison Timeline History         APL Assembly BASIC C C   C  COBOL Fortran Go Groovy Haskell Java JavaScript  JS  Lisp Lua Objective C Pascal Perl PHP Python Ruby Shell Smalltalk Swift Visual Basic  NET  VB NET  more             Category  Lists  Alphabetical Categorical Generational Non English based               v t e   Python    Implementations    CircuitPython CLPython CPython Cython MicroPython Numba IronPython Jython Psyco PyPy Python for S   Shed Skin Stackless Python Unladen Swallow more            IDE    Boa Eric Python IDE IDLE PyDev SPE Ninja IDE more         Topics    WSGI         software  list  Python Software Foundation PyCon             v t e   Python web frameworks       BlueBream Bottle CherryPy Django Flask Grok Nagare Nevow Pyjs Pylons Pyramid Quixote Spyce TACTIC Tornado TurboGears TwistedWeb Webware web py Zope   more                v t e   Free and open source software    General    Alternative terms for free software Comparison of open source and closed source software Comparison of source code hosting facilities Free software Free software project directories Gratis versus libre Long term support Open source software Open source software development Outline      Software packages    Audio Bioinformatics Codecs Collaboration Configuration management Device drivers  Graphics Wireless   Geophysics Health Mathematics Operating systems Programming languages Routing Statistics Television Video games Web applications  Content management systems E commerce   Word processors Android apps iOS apps Commercial Trademarked Formerly proprietary      Community    Free software movement History Open source software movement Organizations Events      Licenses    AFL Apache APSL Artistic Beerware Boost BSD CC  CDDL EPL Free Software Foundation  GNU GPL GNU LGPL   ISC MIT MPL Ms PL RL Python Python Software Foundation License Sleepycat Unlicense WTFPL zlib     Types and standards    Comparison of free and open source software licenses Contributor License Agreement Copyleft Debian Free Software Guidelines Definition of Free Cultural Works Free license The Free Software Definition The Open Source Definition Open source license Permissive software licence Public domain Viral license         Challenges    Binary blob Digital rights management Hardware restrictions License proliferation Mozilla software rebranding Proprietary software SCO Linux controversies Secure boot Software patents Software security Trusted Computing      Related topics    GNU Manifesto The Cathedral and the Bazaar Forking Microsoft Open Specification Promise Open source hardware Revolution OS          Book  Category  Commons  Portal          Authority control    BNF  cb        c  data  GND            LCCN  sh         SUDOC                              Retrieved from  https   en wikipedia org w index php title Python  programming language  oldid                 Categories  Programming languagesClass based programming languagesComputational notebookComputer science in the NetherlandsCross platform free softwareDutch inventionsDynamically typed programming languagesEducational programming languagesHigh level programming languagesInformation technology in the NetherlandsObject oriented programming languagesProgramming languages created in     Python  programming language Scripting languagesText oriented programming languagesCross platform softwareHidden categories  All articles with unsourced statementsArticles with unsourced statements from October     Wikipedia articles needing clarification from May     Articles with unsourced statements from May     Articles containing potentially dated statements from March     All articles containing potentially dated statementsArticles containing potentially dated statements from August     Articles containing potentially dated statements from January     Articles with unsourced statements from March     Articles with Curlie linksWikipedia articles with BNF identifiersWikipedia articles with GND identifiersWikipedia articles with LCCN identifiersWikipedia articles with SUDOC identifiersGood articlesUse dmy dates from August          Navigation menu   Personal tools  Not logged inTalkContributionsCreate accountLog in     Namespaces  ArticleTalk      Variants          Views  ReadEditView history     More        Search             Navigation   Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store     Interaction   HelpAbout WikipediaCommunity portalRecent changesContact page     Tools   What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page     Print export   Create a bookDownload as PDFPrintable version     In other projects   Wikimedia CommonsWikibooksWikiquoteWikiversity     Languages   AfrikaansAlemannisch       Aragon s       AsturianuAz rbaycanca           B n l m g                    BosanskiCatal Cebuano e tinaDanskDeutschEesti        Espa olEsperantoEuskara     Fran aisGalego                       HrvatskiBahasa IndonesiaInterlingua slenskaItaliano                           LatinaLatvie uLietuvi La  lojban LumbaartMagyar                     Bahasa Melayu                Nederlands         NorskNorsk nynorsk     O zbekcha                       Plattd  tschPolskiPortugu sRom n        ScotsShqip     Simple EnglishSloven inaSloven  ina              srpskiSrpskohrvatski                 SuomiSvenskaTagalog                    T rk e                     Ti ng Vi t        Edit links        This page was last edited on    June       at        UTC   Text is available under the Creative Commons Attribution ShareAlike License  additional terms may apply   By using this site  you agree to the Terms of Use and Privacy Policy  Wikipedia  is a registered trademark of the Wikimedia Foundation  Inc   a non profit organization    Privacy policy About Wikipedia Disclaimers Contact Wikipedia Developers Cookie statement Mobile view             window RLQ window RLQ      push function   mw config set   wgPageParseReport    limitreport    cputime           walltime           ppvisitednodes    value        limit            ppgeneratednodes    value     limit            postexpandincludesize    value          limit            templateargumentsize    value         limit            expansiondepth    value      limit       expensivefunctioncount    value      limit        unstrip depth    value     limit       unstrip size    value          limit            entityaccesscount    value     limit        timingprofile                             total                           Template Reflist                           Template Cite web                           Template Infobox                           Template Infobox programming language                           Template Cite book                           Template Fix                           Template Infobox software simple                           Template Official website                           Template Citation needed     scribunto    limitreport timeusage    value           limit             limitreport memusage    value           limit              cachereport    origin   mw       timestamp                    ttl           transientcontent  false     mw config set   wgBackendResponseTime      wgHostname   mw              